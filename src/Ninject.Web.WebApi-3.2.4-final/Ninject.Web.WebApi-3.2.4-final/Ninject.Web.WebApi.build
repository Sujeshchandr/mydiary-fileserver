<?xml version="1.0" encoding="utf-8"?>
<project name="Ninject" default="build">
	<property name="version" value="0.0.0.0" overwrite="true"/>
	<property name="product.name" value="Ninject.Web.WebApi" overwrite="false"/>
	<property name="product.company" value="Ninject Project Contributors" overwrite="false"/>
	<property name="product.duration" value="2012" overwrite="false"/>
	<property name="product.description" value="Ninject support for ASP.NET Web API" overwrite="false"/>
	<property name="product.platforms" value="net-4.0,net-4.5"  overwrite="false"/>
	<property name="product.buildserverPlatforms" value="net-4.0"  overwrite="false"/>
	<property name="product.packagePostfix" value="" overwrite="false"/>
	<property name="dependencies" value="Ninject,Ninject.Web.Common,Ninject.Extensions.NamedScope,Ninject.Extensions.ContextPreservation"  overwrite="false"/>

	<include buildfile="Ninject.include" />
	<target name="all" depends="core webhost selfhost owinhost"/>
	<target name="nuget-all" depends="nuget-webapi nuget-selfhost nuget-webhost nuget-owinhost"/>

	<target name="core" depends="init">
		<csc noconfig="true" warnaserror="true" target="library" debug="${build.debug}" optimize="${build.optimize}" define="${build.defines}" output="${current.path.build}/${product.assembly}" doc="${current.path.build}/${product.docfile}" keyfile="${path.src}/${product.keyfile}">
			<arg line="/filealign:512" unless="${nant.settings.currentframework == 'mono-2.0'}"/>
			<sources basedir="${path.src}">
				<include name="${build.asminfo}"/>
				<include name="${product.name}/**/*.cs"/>
			</sources>
			<references>
				<include name="mscorlib.dll"/>
				<include name="System.dll"/>
				<include name="System.Core.dll"/>
				<include name="System.Web.dll"/>
				<include name="System.Web.Abstractions.dll"/>
				<include name="System.Web.Routing.dll"/>
				<include name="System.ComponentModel.DataAnnotations.dll"/>
				<include name="${path.packages}/Microsoft.Net.Http.*/lib/net40/System.Net.Http.dll"/>
				<include name="${path.packages}/Microsoft.AspNet.WebApi.Core.*/lib/net45/System.Web.Http.dll"/>
				<include name="${path.lib}/Ninject/${build.platform}/Ninject.dll"/>
				<include name="${path.lib}/Ninject.Web.Common/${build.platform}/Ninject.Web.Common.dll"/>
			</references>
		</csc>
	</target>
	
	<target name="webhost" depends="core">
		<csc noconfig="true" warnaserror="true" target="library" debug="${build.debug}" optimize="${build.optimize}" define="${build.defines}" output="${current.path.build}/${product.name}.WebHost.dll" doc="${current.path.build}/${product.name}.WebHost.xml" keyfile="${path.src}/${product.keyfile}">
			<arg line="/filealign:512" unless="${nant.settings.currentframework == 'mono-2.0'}"/>
			<sources basedir="${path.src}">
				<include name="${build.asminfo}"/>
				<include name="${product.name}.WebHost/**/*.cs"/>
			</sources>
			<references>
				<include name="mscorlib.dll"/>
				<include name="System.dll"/>
				<include name="System.Core.dll"/>
				<include name="System.Web.dll"/>
				<include name="System.Web.Abstractions.dll"/>
				<include name="System.Web.Routing.dll"/>
				<include name="System.ComponentModel.DataAnnotations.dll"/>
				<include name="${path.packages}/Microsoft.Net.Http.*/lib/net40/System.Net.Http.dll"/>
				<include name="${path.packages}/Microsoft.AspNet.WebApi.Core.*/lib/net45/System.Web.Http.dll"/>
				<include name="${path.packages}/Microsoft.AspNet.WebApi.WebHost.*/lib/net45/System.Web.Http.WebHost.dll"/>
				<include name="${path.lib}/Ninject/${build.platform}/Ninject.dll"/>
				<include name="${path.lib}/Ninject.Web.Common/${build.platform}/Ninject.Web.Common.dll"/>
				<include name="${current.path.build}/${product.assembly}"/>
			</references>
		</csc>
	</target>
	
  <target name="owinhost" depends="core" if="${not(string::contains(build.platform, 'net-3.5')) 
		and not(string::contains(build.platform, 'net-4.0'))
		and not(string::contains(build.platform, 'mono-2.0')) 
		and not(string::contains(build.platform, 'mono-3.5'))
		and not(string::contains(build.platform, 'mono-4.0'))}">
		<property name="current.path.build.extensions" value="${path.build}/${build.platform}/${build.config}/extensions"/>
		<mkdir dir="${current.path.build.extensions}" if="${not(directory::exists(current.path.build.extensions))}"/>
		
		<property name="packagepath.Owin" value="Owin.*/lib/net40" if="${string::contains(build.platform, 'net-4.5')}" />
		<property name="current.path.lib.Owin" value="${path.packages}/${packagepath.Owin}"/>
		<copy todir="${current.path.build}/Owin/lib">
			<fileset basedir="${path.packages}">
				<include name="${packagepath.Owin}/*.dll"/>
				<include name="${packagepath.Owin}/*.xml"/>
			</fileset>
		</copy> 
		
		<property name="packagepath.Microsoft.Owin" value="Microsoft.Owin.*/lib/net45" if="${string::contains(build.platform, 'net-4.5')}" />
		<property name="current.path.lib.Microsoft.Owin" value="${path.packages}/${packagepath.Microsoft.Owin}"/>
		<copy todir="${current.path.build}/Microsoft.Owin/lib">
			<fileset basedir="${path.packages}">
				<include name="${packagepath.Microsoft.Owin}/*.dll"/>
				<include name="${packagepath.Microsoft.Owin}/*.xml"/>
			</fileset>
		</copy> 		
		
		<property name="packagepath.Microsoft.AspNet.WebApi.Owin" value="Microsoft.AspNet.WebApi.Owin.*/lib/net45" if="${string::contains(build.platform, 'net-4.5')}" />
		<property name="current.path.lib.Microsoft.AspNet.WebApi.Owin" value="${path.packages}/${packagepath.Microsoft.AspNet.WebApi.Owin}"/>
		<copy todir="${current.path.build}/Microsoft.AspNet.WebApi.Owin/lib">
			<fileset basedir="${path.packages}">
				<include name="${packagepath.Microsoft.AspNet.WebApi.Owin}/*.dll"/>
				<include name="${packagepath.Microsoft.AspNet.WebApi.Owin}/*.xml"/>
			</fileset>
		</copy> 		 
    
		<property name="current.path.build.extensions" value="${path.build}/${build.platform}/${build.config}/extensions"/>
		<mkdir dir="${current.path.build.extensions}" if="${not(directory::exists(current.path.build.extensions))}"/>
	
		<csc noconfig="true" warnaserror="true" target="library" debug="${build.debug}" optimize="${build.optimize}" define="${build.defines}" 
		     output="${current.path.build}/${product.name}.OwinHost.dll" doc="${current.path.build}/${product.name}.OwinHost.xml" keyfile="${path.src}/${product.keyfile}">
			<arg line="/filealign:512" unless="${nant.settings.currentframework == 'mono-2.0'}"/>
			<sources basedir="${path.src}">
				<include name="${build.asminfo}"/>
				<include name="${product.name}.OwinHost/**/*.cs"/>
			</sources>
			<references basedir="${current.path.build}">
       				<include name="mscorlib.dll"/>
				<include name="System.dll"/>
				<include name="System.Core.dll"/>
				<include name="System.Web.dll"/>
				<include name="${path.packages}/Microsoft.Net.Http.*/lib/net40/System.Net.Http.dll"/>
				<include name="${path.packages}/Microsoft.AspNet.WebApi.Core.*/lib/net45/System.Web.Http.dll"/>
				<include name="${path.lib}/Ninject/${build.platform}/Ninject.dll"/>
				<include name="${path.lib}/Ninject.Web.Common/${build.platform}/Ninject.Web.Common.dll"/>
				<include name="${path.lib}/Ninject.Web.Common/${build.platform}/Ninject.Web.Common.OwinHost.dll"/>
				<include name="${path.lib}/Ninject.Extensions.ContextPreservation/${build.platform}/Ninject.Extensions.ContextPreservation.dll"/>
				<include name="${path.lib}/Ninject.Extensions.NamedScope/${build.platform}/Ninject.Extensions.NamedScope.dll"/>
				<include name="${current.path.build}/${product.assembly}"/>
        
				<include name="${current.path.lib.Owin}/Owin.dll" />
				<include name="${current.path.lib.Microsoft.Owin}/Microsoft.Owin.dll" />
				<include name="${current.path.lib.Microsoft.Owin}/Microsoft.Owin.dll" />
				<include name="${current.path.lib.Microsoft.AspNet.WebApi.Owin}/System.Web.Http.Owin.dll" />
				<include name="${current.path.build}/${product.assembly}"/>
			</references>
		</csc>
	</target>
    
	<target name="selfhost" depends="core">
		<property name="current.path.build.extensions" value="${path.build}/${build.platform}/${build.config}/extensions"/>
		<mkdir dir="${current.path.build.extensions}" if="${not(directory::exists(current.path.build.extensions))}"/>
	
		<csc noconfig="true" warnaserror="true" target="library" debug="${build.debug}" optimize="${build.optimize}" define="${build.defines}" 
		     output="${current.path.build}/${product.name}.SelfHost.dll" doc="${current.path.build}/${product.name}.SelfHost.xml" keyfile="${path.src}/${product.keyfile}">
			<arg line="/filealign:512" unless="${nant.settings.currentframework == 'mono-2.0'}"/>
			<sources basedir="${path.src}">
				<include name="${build.asminfo}"/>
				<include name="${product.name}.Selfhost/**/*.cs"/>
			</sources>
			<references basedir="${current.path.build}">
				<include name="mscorlib.dll"/>
				<include name="System.dll"/>
				<include name="System.Core.dll"/>
				<include name="System.Web.dll"/>
				<include name="System.Web.Abstractions.dll"/>
				<include name="System.Web.Routing.dll"/>
				<include name="System.ComponentModel.DataAnnotations.dll"/>
				<include name="${path.packages}/Microsoft.Net.Http.*/lib/net40/System.Net.Http.dll"/>
				<include name="${path.packages}/Microsoft.AspNet.WebApi.Core.*/lib/net45/System.Web.Http.dll"/>
				<include name="${path.packages}/Microsoft.AspNet.WebApi.SelfHost.*/lib/net45/System.Web.Http.SelfHost.dll"/>
				<include name="${path.lib}/Ninject/${build.platform}/Ninject.dll"/>
				<include name="${path.lib}/Ninject.Web.Common/${build.platform}/Ninject.Web.Common.dll"/>
				<include name="${path.lib}/Ninject.Web.Common/${build.platform}/Ninject.Web.Common.SelfHost.dll"/>
				<include name="${path.lib}/Ninject.Extensions.ContextPreservation/${build.platform}/Ninject.Extensions.ContextPreservation.dll"/>
				<include name="${path.lib}/Ninject.Extensions.NamedScope/${build.platform}/Ninject.Extensions.NamedScope.dll"/>
				<include name="${current.path.build}/${product.assembly}"/>
			</references>
		</csc>
	</target>

	<target name="compile-tests"/>
	<target name="compile-silverlight-tests"/>
	
	<target name="nuget-webapi">
		<property name="nuget.sourcedir" value="${path.base}/nuget" />
		<property name="nuget.basedir" value="${path.base}/build/nuget" />
		<property name="nuget.symbol.basedir" value="${path.base}/build/nuget_symbol" />
		<property name="nuget.platforms" value="${product.platforms}" />
		<property name="nuget.name" value="${product.name}" />
		<property name="nuget.project" value="${path.src}/${product.name}/${product.name}.csproj" />
		<property name="nuget.releaseDirectory" value="${path.build}\${build.platform}\release" dynamic="true"/>
		<property name="nuget.dependencies" value="${dependencies}" />
		<property name="nuget.additionalFiles" value="-" />
		<property name="nuget.packageName" value="Ninject.Web.WebApi" />	

		<call target="nuget-run"/>
	</target>
	
	<target name="nuget-selfhost">
		<property name="nuget.sourcedir" value="${path.base}/nuget-selfhost" />
		<property name="nuget.basedir" value="${path.base}/build/nuget-selfhost" />
		<property name="nuget.platforms" value="${product.platforms}" />
		<property name="nuget.name" value="${product.name}.Selfhost" />
		<property name="nuget.releaseDirectory" value="${path.build}\${build.platform}\release" dynamic="true"/>
		<property name="nuget.dependencies" value="${product.name}" />
		<property name="nuget.additionalFiles" value="-" />
		<property name="nuget.packageName" value="${nuget.name}${product.packagePostfix}" />	
		<property name="nuget.symbol.basedir" value="${path.base}/build/nuget-selfhost_symbol" />
		<property name="nuget.project" value="${path.src}/${product.name}.Selfhost/${product.name}.Selfhost.csproj" />

		<property name="nant.settings.currentframework" value="net-4.0"/>
		<msbuild project="${nuget.project}" />
		<call target="nuget-run"/>
	</target>	
	
	<target name="nuget-webhost">
		<property name="nuget.sourcedir" value="${path.base}/nuget-webhost" />
		<property name="nuget.basedir" value="${path.base}/build/nuget-webhost" />
		<property name="nuget.platforms" value="${product.platforms}" />
		<property name="nuget.name" value="${product.name}.WebHost" />
		<property name="nuget.releaseDirectory" value="${path.build}\${build.platform}\release" dynamic="true"/>
		<property name="nuget.dependencies" value="${product.name}" />
		<property name="nuget.additionalFiles" value="-" />
		<property name="nuget.packageName" value="${nuget.name}${product.packagePostfix}" />	
		<property name="nuget.symbol.basedir" value="${path.base}/build/nuget-webhost_symbol" />
		<property name="nuget.project" value="${path.src}/${product.name}.WebHost/${product.name}.WebHost.csproj" />

		<property name="nant.settings.currentframework" value="net-4.0"/>
		<msbuild project="${nuget.project}" />
		<call target="nuget-run"/>
	</target>	

	<target name="nuget-owinhost">
		<property name="nuget.sourcedir" value="${path.base}/nuget-owinhost" />
		<property name="nuget.basedir" value="${path.base}/build/nuget-owinhost" />
		<property name="nuget.platforms" value="net-4.5" />
		<property name="nuget.name" value="${product.name}.OwinHost" />
		<property name="nuget.releaseDirectory" value="${path.build}\${build.platform}\release" dynamic="true"/>
		<property name="nuget.dependencies" value="${product.name}" />
		<property name="nuget.additionalFiles" value="-" />
		<property name="nuget.packageName" value="${nuget.name}${product.packagePostfix}" />	
		<property name="nuget.symbol.basedir" value="${path.base}/build/nuget-owinhost_symbol" />
		<property name="nuget.project" value="${path.src}/${product.name}.OwinHost/${product.name}.OwinHost.csproj" />

		<property name="nant.settings.currentframework" value="net-4.0"/>
		<msbuild project="${nuget.project}" />
		<call target="nuget-run"/>
	</target>	
</project>
